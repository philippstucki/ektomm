#!/usr/bin/env php
<?php

function notifyError($to) {
    global $errorhandle;
    fwrite($errorhandle, $to.PHP_EOL);
    fwrite(STDERR, "error sending to {$to}".PHP_EOL);
    fwrite(STDOUT, $to.' ERROR'.PHP_EOL);
}

require_once('vendor/swiftmailer/lib/swift_required.php');

if (empty($argv[1]) || !is_dir($argv[1]) || !is_readable($argv[1])) {
    fwrite(STDERR, 'Usage: ektomm-send campaign'.PHP_EOL);
    die(1);
}

$cdir = $argv[1];

// check if the config exists
if (!is_readable($cdir.'/config.php')) {
    fwrite(STDERR, 'config.php no readable'.PHP_EOL);
    die(1);
}
// read the config
require($argv[1].'/config.php');

// check for recipients file
if (!is_readable($cdir.'/recipients.txt')) {
    fwrite(STDERR, 'config.php no readable'.PHP_EOL);
    die(1);
}
// read recipients
$recipients = file($argv[1].'/recipients.txt');

// try to read the sent file
if (is_readable($cdir.'/sent.txt')) {
    fwrite(STDERR, "sent.txt present, reading\n");
    $sent = file($cdir.'/sent.txt', FILE_IGNORE_NEW_LINES);
} else {
    $sent = array();
}

// create handle for state handling
$senthandle = fopen($cdir.'/sent.txt', 'a');
$errorhandle = fopen($cdir.'/error.txt', 'a');

$transport = Swift_SmtpTransport::newInstance($config['host'], $config['port'])
  ->setUsername($config['username'])
  ->setPassword($config['password']);

$mailer = Swift_Mailer::newInstance($transport);

fwrite(STDERR, "Starting to send...\n");
$msgSent = 0;
$msgError = 0;

$message = Swift_Message::newInstance($config['subject'])
  ->setFrom($config['from'])
  ->setBody($config['txtBody']);

// add html body if needed
if(!empty($config['htmlBody'])) {
    $message->addPart($config['htmlBody'], 'text/html');
}

foreach ($recipients as $line) {

    $to = trim($line);
    if($to !== '' && !in_array($to, $sent)) {

        try {
            $message->setTo(array($to));
        } catch(Swift_RfcComplianceException $e) {
            notifyError($to);
            $msgError++;
            continue;
        }

        $result = $mailer->send($message, $failures);
        if($result === 1) {
            $msgSent++;
            fwrite($senthandle, $to.PHP_EOL);
            fwrite(STDERR, "sent to {$to}".PHP_EOL);
            fwrite(STDOUT, $to.' OK'.PHP_EOL);
        } else {
            notifyError($to);
            $msgError++;
        }

    }
}

fwrite(STDERR, $msgSent.' messages sent, '.count($recipients).' recipients, '.$msgError.' failed'.PHP_EOL);

